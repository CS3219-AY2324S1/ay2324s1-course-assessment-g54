{
    "title": "Sliding Window Maximum",
    "complexity": "hard",
    "categories": [
        "Array",
        "Queue",
        "Sliding Window",
        "Heap (Priority Queue)",
        "Monotonic Queue",
        "Algorithms"
    ],
    "link": "https://leetcode.com/problems/sliding-window-maximum/",
    "description": "You are given an array of integers`nums`, there is a sliding window of size `k` which is moving from the very left of the array to the very right. You can only see the `k` numbers in the window. Each time the sliding window moves right by one position.\n\nReturn *the max sliding window*.\n\n**Example 1:**\n**Input:** nums = [1,3,-1,-3,5,3,6,7], k = 3\n**Output:** [3,3,5,5,6,7]\n**Explanation:** \nWindow position                Max\n---------------               -----\n[1  3  -1] -3  5  3  6  7       **3**\n 1 [3  -1  -3] 5  3  6  7       **3**\n 1  3 [-1  -3  5] 3  6  7       **5**\n 1  3  -1 [-3  5  3] 6  7       **5**\n 1  3  -1  -3 [5  3  6] 7       **6**\n 1  3  -1  -3  5 [3  6  7]      **7**\n\n**Example 2:**\n**Input:** nums = [1], k = 1\n**Output:** [1]\n\n**Constraints:**\n* `1 <= nums.length <= 105`\n* `-104 <= nums[i] <= 104`\n* `1 <= k <= nums.length`\n\n"
}