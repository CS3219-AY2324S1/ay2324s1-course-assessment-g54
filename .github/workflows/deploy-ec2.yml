name: Deploy to EC2

on:
  push:
    branches: [ dev ]

jobs:
  Deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2 
      - name: Deploy
        env:
            PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            HOSTNAME: ${{secrets.SSH_HOST}}
            USER_NAME: ${{secrets.USER_NAME}}
      
        run: |
          echo "Step 1: Setting up SSH access..."
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          echo "SSH access configured."

          echo "Step 2: SSH into EC2 instance"
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          echo "Entered EC2 instance"
              
              echo "Step 3: Stopping Docker containers..."
              docker compose down

              echo "Step 4: Pull and update local production branch to match remote"
              docker compose down
              cd app &&
              git reset --hard origin/production &&
              git pull origin production
              echo "Production branch updated"
              
              echo "Step 5: Install dependencies for all microservices"
              services=("frontend-service" "question-service" "users-service" "matchmaking-service" "collab-service")
              for service in "${services[@]}"; do
                echo "Installing dependencies for $service..."
                cd "$service" && yarn install --frozen-lockfile
                if [ "$service" == "users-service" ]; then
                  echo "Running yarn knex migrate:latest for $service..."
                  yarn knex migrate:latest
                fi
                cd ..
              done
              echo "Dependencies installed"
              
              echo "Step 6: Restarting Docker containers..."
              docker compose up --detach
              '