name: Deploy to EC2

on:
  workflow_dispatch: {}

jobs:
  Deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up SSH access
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          echo "SSH access configured."

      - name: Run in EC2 instance
        env:
          USER_NAME: ${{ secrets.USER_NAME }}
          HOSTNAME: ${{ secrets.SSH_HOST }}
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            echo "Entered EC2 instance"

            echo "Step 1: Pull and update local production branch to match remote"
            cd app &&
            git reset --hard origin/production &&
            git pull origin production
            echo "Production branch updated"
            
            echo "Step 2: Install dependencies for all microservices"
            services=("frontend-service" "question-service" "users-service" "matchmaking-service" "collab-service")
            for service in "${services[@]}"; do
              echo "Installing dependencies for $service..."
              cd "$service" && yarn install --frozen-lockfile
              if [ "$service" == "users-service" ]; then
                echo "Running yarn knex migrate:latest for $service..."
                yarn knex migrate:latest
              fi
              cd ..
            done
            echo "Dependencies installed"
            
            echo "Step 3: Stopping Docker containers..."
            docker compose down
            echo "Step 4: Restarting Docker containers..."
            bash start-prod.sh
          '