services:
  frontend-service:
    build:
      context: ./frontend-service
    container_name: frontend-service
    ports:
      - 3000:3000
    depends_on:
      - question-service
      - users-service
    environment:
      REACT_APP_QUESTIONS_SERVICE_HOST: http://localhost:3001
      REACT_APP_USERS_SERVICE_HOST: http://localhost:3002
      REACT_APP_MATCHMAKING_SERVICE_HOST: http://localhost:3003
      REACT_APP_COLLABORATION_SERVICE_HOST: http://localhost:3004
      REACT_APP_HISTORY_SERVICE_HOST: http://localhost:3005
      REACT_APP_VIDEO_SERVICE_HOST: http://localhost:3006
    volumes:
      - ./frontend-service:/app
    command: yarn start

  question-service:
    build:
      context: ./question-service
    container_name: question-service
    ports:
      - 3001:3001
    depends_on:
      - mongodb
    environment:
      PORT: 3001
      USERS_SERVICE_HOST: http://users-service:3002
      MONGO_LOCAL_URI: mongodb://test:testpw@localhost:27017/?retryWrites=true&w=majority&maxPoolSize=20
      MONGO_LOCAL_DOCKER_URI: mongodb://test:testpw@mongodb:27017/?retryWrites=true&w=majority&maxPoolSize=20
    volumes:
      - ./question-service:/app
    command: yarn start

  users-service:
    build:
      context: ./users-service
    container_name: users-service
    ports:
      - 3002:3002
    depends_on:
      - postgresql
    environment:
      PORT: 3002
      DB_HOST: postgresql
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: users
    volumes:
      - ./users-service:/app
    command: yarn start

  history-service:
    build:
      context: ./history-service
    container_name: history-service
    ports:
      - 3005:3005
    depends_on:
      - postgresql
      - mongodb
    environment:
      PORT: 3005
      USERS_SERVICE_HOST: http://users-service:3002
      QUESTION_SERVICE_HOST: http://question-service:3001
      DB_HOST: postgresql
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: history
    volumes:
      - ./history-service:/app
    command: yarn start

  matchmaking-service:
    build:
      context: ./matchmaking-service
    container_name: matchmaking-service
    ports:
      - 3003:3003
    depends_on:
      - users-service
      - redis
    environment:
      PORT: 3003
      REDIS_HOST: redis
      REDIS_PORT: 6379
      USERS_SERVICE_HOST: http://users-service:3002
    volumes:
      - ./matchmaking-service:/app
    command: yarn start

  collaboration-service:
    build:
      context: ./collaboration-service
    container_name: collaboration-service
    ports:
      - 3004:3004
    depends_on:
      - users-service
      - redis
    environment:
      PORT: 3004
      REDIS_PW: test
      REDIS_NAME: redis
      REDIS_PORT: 6379
      USERS_SERVICE_HOST: http://users-service:3002
      QUESTION_SERVICE_HOST: http://question-service:3001
    volumes:
      - ./collaboration-service:/app
    command: yarn start

  video-service:
    build:
      context: ./video-service
    container_name: video-service
    ports:
      - 3006:3006
    environment:
      PORT: 3006
      USERS_SERVICE_HOST: http://users-service:3002
      QUESTION_SERVICE_HOST: http://question-service:3001
    volumes:
      - ./video-service:/app
    command: yarn start

  postgresql:
    image: postgres:15-alpine
    container_name: postgresql
    volumes:
      - ./create-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/create-multiple-postgresql-databases.sh
      - "postgres:/var/lib/postgresql/data"
    ports:
      - 5432:5432
    restart: always
    environment:
      POSTGRES_MULTIPLE_DATABASES: users,history
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  mongodb:
    image: mongo:7.0.1
    container_name: mongodb
    restart: always
    volumes:
      - "mongodb-data:/data/db"
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: test
      MONGO_INITDB_ROOT_PASSWORD: testpw
      MONGO_INITDB_DATABASE: peerprep-database

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    command: redis-server --loglevel warning
    ports:
      - 6379:6379

volumes:
  postgres:
  mongodb-data:
