services:
  frontend:
    build:
      context: ./frontend-service
    container_name: frontend
    ports:
      - 3000:3000
    depends_on:
      - users
    environment:
      REACT_APP_USERS_SERVICE_HOST: http://localhost:3002
    volumes:
      - ./frontend-service:/app
    command: yarn start

  question-service:
    build:
      context: ./question-service
    container_name: question-service
    ports:
      - 3001:3001
    depends_on:
      - mongo
    environment:
      QUESTION_SERVICE_HOST: http://localhost:3001
    volumes:
      - ./question-service:/app
    command: yarn start

  users:
    build:
      context: ./users-service
    container_name: users
    ports:
      - 3002:3002
    depends_on:
      - postgresql
    environment:
      PORT: 3002
      DB_HOST: postgresql
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
    volumes:
      - ./users-service:/app
    command: yarn start

  postgresql:
    image: postgres:15-alpine
    container_name: postgresql
    volumes:
      - "postgres:/var/lib/postgresql/data"
    ports:
      - 5432:5432
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  mongo:
    image: mongo:7.0.1
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: test
      MONGO_INITDB_ROOT_PASSWORD: testpw
      MONGO_INITDB_DATABASE: peerprep-database

  mongo-express:
    image: mongo-express
    container_name: mongo-ui
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: testpw
      ME_CONFIG_MONGODB_ADMINPASSWORD: test
      ME_CONFIG_MONGODB_URL: mongodb://test:testpw@mongo:27017/

volumes:
  postgres:
