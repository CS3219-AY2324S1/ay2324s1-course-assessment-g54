x-logging: &default-logging
  logging:
    driver: json-file
    options:
      max-size: 100m

services:
  frontend-service:
    build:
      context: ./frontend-service
    container_name: frontend-service
    ports:
      - 3000:3000
    depends_on:
      - question-service
      - users-service
    environment:
      REACT_APP_QUESTIONS_SERVICE_HOST: http://localhost:3001
      REACT_APP_USERS_SERVICE_HOST: http://localhost:3002
      REACT_APP_MATCHMAKING_SERVICE_HOST: ws://localhost:3003
      REACT_APP_HISTORY_SERVICE_HOST: http://localhost:3005
    volumes:
      - ./frontend-service:/app
    command: yarn start

  question-service:
    build:
      context: ./question-service
    container_name: question-service
    ports:
      - 3001:3001
    depends_on:
      - mongodb
    environment:
      PORT: 3001
      USERS_SERVICE_HOST: http://users-service:3002
      MONGO_LOCAL_URI: mongodb://test:testpw@localhost:27017/?retryWrites=true&w=majority&maxPoolSize=20
      MONGO_LOCAL_DOCKER_URI: mongodb://test:testpw@mongodb:27017/?retryWrites=true&w=majority&maxPoolSize=20
    volumes:
      - ./question-service:/app
    command: yarn start

  users-service:
    build:
      context: ./users-service
    container_name: users-service
    ports:
      - 3002:3002
    depends_on:
      - postgresql
    environment:
      PORT: 3002
      DB_HOST: postgresql
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: users
    volumes:
      - ./users-service:/app
    command: yarn start

  history-service:
    build:
      context: ./history-service
    container_name: history-service
    ports:
      - 3005:3005
    depends_on:
      - postgresql
      - mongodb
    environment:
      PORT: 3005
      DB_HOST: postgresql
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: history
    volumes:
      - ./history-service:/app
    command: yarn start

  collab-service:
    build:
      context: ./collab-service
    container_name: collab-service
    ports:
      - 3004:3004
    depends_on:
      - users-service
      - collab-redis
    environment:
      PORT: 3004
      REDIS_PW: test
      REDIS_NAME: collab-redis
      REDIS_PORT: 6379
      USERS_SERVICE_HOST: http://users-service:3002
      QUESTION_SERVICE_HOST: http://question-service:3001
    volumes:
      - ./collab-service:/app
    command: yarn start

  matchmaking-service:
    build:
      context: ./matchmaking-service
    container_name: matchmaking-service
    ports:
      - 3003:3003
    depends_on:
      - users-service
      - rabbitmq
    environment:
      PORT: 3003
      RABBITMQ_HOST: amqp://rabbitmq:5672
      USERS_SERVICE_HOST: http://users-service:3002
    volumes:
      - ./matchmaking-service:/app
    command: yarn start

  postgresql:
    image: postgres:15-alpine
    container_name: postgresql
    volumes:
      - ./create-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/create-multiple-postgresql-databases.sh
      - "postgres:/var/lib/postgresql/data"
    ports:
      - 5432:5432
    restart: always
    environment:
      POSTGRES_MULTIPLE_DATABASES: users,history
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  mongodb:
    image: mongo:7.0.1
    container_name: mongodb
    restart: always
    volumes:
      - "mongodb-data:/data/db"
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: test
      MONGO_INITDB_ROOT_PASSWORD: testpw
      MONGO_INITDB_DATABASE: peerprep-database

  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - 5672:5672
      - 15672:15672

  collab-redis:
    image: redis
    container_name: collab-redis
    volumes:
      - "collab-redis-data:/data"
    restart: always
    command: redis-server --requirepass test
    ports:
      - 6379:6379

  mongo-ui:
    image: mongo-express
    container_name: mongo-ui
    restart: always
    ports:
      - 8081:8081
    depends_on:
      - mongodb
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: testpw
      ME_CONFIG_MONGODB_ADMINPASSWORD: test
      ME_CONFIG_MONGODB_URL: mongodb://test:testpw@mongodb:27017/

  pgadmin:
    image: dpage/pgadmin4
    container_name: pg-admin
    restart: always
    ports:
      - 8082:80
    depends_on:
      - postgresql
    environment:
      PGADMIN_DEFAULT_EMAIL: test@gmail.com
      PGADMIN_DEFAULT_PASSWORD: test
      PGADMIN_LISTEN_PORT: 80

  judge0-server:
    image: judge0/judge0:1.13.0
    container_name: judge0-server
    volumes:
      - ./code-execution-service/judge0.conf:/judge0.conf:ro
    ports:
      - 2358:2358
    restart: always
    privileged: true
    depends_on:
      - db
      - redis
    <<: *default-logging

  judge0-workers:
    image: judge0/judge0:1.13.0
    volumes:
      - ./code-execution-service/judge0.conf:/judge0.conf:ro
    command: ["./scripts/workers"]
    restart: always
    privileged: true
    depends_on:
      - db
      - redis
    <<: *default-logging

  db:
    image: postgres:13.0
    container_name: judge0-db
    env_file: ./code-execution-service/judge0.conf
    volumes:
      - judge0-postgres:/var/lib/postgresql/data/
    ports:
      - 5433:5432
    restart: always
    <<: *default-logging

  redis:
    image: redis:6.0
    container_name: judge0-redis
    volumes:
      - judge0-redis-data:/data
    ports:
      - 6380:6379
    restart: always
    command:
      [
        "bash",
        "-c",
        'docker-entrypoint.sh --appendonly yes --requirepass "$$REDIS_PASSWORD"',
      ]
    env_file: ./code-execution-service/judge0.conf
    <<: *default-logging

volumes:
  postgres:
  mongodb-data:
  collab-redis-data:
  judge0-postgres:
  judge0-redis-data:
